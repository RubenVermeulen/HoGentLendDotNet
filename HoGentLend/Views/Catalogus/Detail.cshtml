@model HoGentLend.ViewModels.MateriaalViewModel

@{
    ViewBag.Title = "Detail";
}


<div id="details" class="row">
    <div class="col-md-12">
        @Html.ActionLink("Terug naar materiaallijst", "Index", "Catalogus", new { @class = "btn btn-primary" })
    </div>

    <br/>

    <div class="col-md-3 col-sm-3 col-xs-12">
        @if (@Model.PhotoBase64 != null)
        {
            <img src="data:image/png;base64,@Model.PhotoBase64" alt="@Model.Name" class="col-md-12 col-sm-12 col-xs-12 img-reponsive img-thumbnail details-img"/>
        }
        else
        {
            <img src="~/Content/Images/default-placeholder.png" alt="Geen afbeelding beschikbaar" class="col-md-12 col-sm-12 col-xs-12 img-reponsive img-thumbnail details-img"/>
        }
    </div>

    <div class="col-md-9 col-sm-9 col-xs-12">
        <div class="page-header">
            <h2>@Html.DisplayFor(model => model.Name)</h2>
        </div>

        @using (Html.BeginForm("Add", "Verlanglijst", FormMethod.Post))
        {
            <p class="available">
                <span class="amount">@(Model.Amount - Model.AmountNotAvailable)</span> beschikbaar
            </p>
            <button type="submit" class="reserveer">
                <span class="glyphicon glyphicon-star"></span>
                Voeg toe aan verlanglijstje
            </button>
            @Html.HiddenFor(model => model.Id)
            ;
        }

        @* Description *@
        <p>
            <strong>@Html.DisplayNameFor(model => model.Description)</strong>
        </p>
        <p class="description">
            @if (!string.IsNullOrEmpty(Model.Description))
            {
                @Html.DisplayFor(model => model.Description)
            }
            else
            {
                @("Geen beschrijving")
            }
        </p>

        @* Location *@
        <p>
            <strong>@Html.DisplayNameFor(model => model.Location)</strong>
        </p>
        <p>
            @if (!string.IsNullOrEmpty(Model.Location))
            {
                @Html.DisplayFor(model => model.Location)
            }
            else
            {
                @("Geen locatie")
            }
        </p>

        @* Doelgroepen *@
        <p>
            <strong>@Html.DisplayNameFor(model => model.Doelgroepen)</strong>
        </p>
        <p>
            @if (Model.Doelgroepen != null && Model.Doelgroepen.Count > 0)
            {
                foreach (string groep in Model.Doelgroepen)
                {
                    @groep
                    <br/>
                }
            }
            else
            {
                @("Geen doelgroepen")
            }
        </p>

        @* Leergebieden *@
        <p>
            <strong>@Html.DisplayNameFor(model => model.Leergebieden)</strong>
        </p>
        <p>
            @if (Model.Leergebieden != null && Model.Leergebieden.Count > 0)
            {
                foreach (string groep in Model.Leergebieden)
                {
                    @groep
                    <br/>
                }
            }
            else
            {
                @("Geen leergebieden")
            }


        </p>

        <hr/>



        @* Information for buying the item *@
        <div class="bg-info info-buying">
            <h3>@Model.Name aankopen</h3>
            <p>
                Onderstaande gegevens kan je gebruiken wanneer je een "@Model.Name" opnieuw moet aankopen omdat het/ze stuk is/zijn. Wil je graag één aankopen voor persoonlijk gebruik dan kan dit ook.
            </p>
            <p>
                @* Name Firma *@
                <strong>@Html.DisplayNameFor(model => model.FirmaName)</strong><br/>
                @if (!string.IsNullOrEmpty(Model.FirmaName))
                {
                    @Html.DisplayFor(model => model.FirmaName)
                }
                else
                {
                    @("Geen naam")
                }

                <br/>

                @* Email Firma *@
                <strong>@Html.DisplayNameFor(model => model.FirmaEmail)</strong><br/>
                @if (!string.IsNullOrEmpty(Model.FirmaEmail))
                {
                    @Html.DisplayFor(model => model.FirmaEmail)
                }
                else
                {
                    @("Geen e-mailadres")
                }

                <br/>

                @* Article code *@
                <strong>@Html.DisplayNameFor(model => model.ArticleCode)</strong><br/>
                @if (!string.IsNullOrEmpty(Model.ArticleCode))
                {
                    @Html.DisplayFor(model => model.ArticleCode)
                }
                else
                {
                    @("Geen artikelcode")
                }

                <br/>

                @* Price *@
                <strong>@Html.DisplayNameFor(model => model.Price)</strong><br/>
                @string.Format("{0:C}", Model.Price)
            </p>
        </div>

        <hr/>

        <div id="chart" class="col-md-12" style="height: 400px;"></div>
    </div>
</div>

@section scripts
{
    <script src="http://code.highcharts.com/highcharts.js"></script>
    <script>
        $(function () {
            $('#chart').highcharts({
                chart: {
                    type: 'line'
                },
                title: {
                    text: 'Reservatie grafiek'
                },
                xAxis: {
                    title: {
                        text: 'Dagen',
                    },
                    type: 'datetime',
                    tickInterval: 3600 * 1000 * 24, // 1 dag
                    range: 3600 * 1000 * 24 * 14, // 14 dagen
                    max: 3600 * 1000 * 24 * 13, // 14 dagen
                },
                yAxis: {
                    title: {
                        text: 'Aantal',
                    },
                    tickInterval: 1,
                },
                series: [
                    {
                        name: 'Aantal gereserveerd',
                        data: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,15,12,31,4,5,8,4,4],
                        pointInterval: 3600 * 1000 * 24,
                    },
                    {
                        name: 'Aantal beschikbaar',
                        data: [5, 4, 7, 8, 9, 5, 10],
                        pointInterval: 3600 * 1000 * 24,
                    }
                ],
            });
        });
    </script>
}
